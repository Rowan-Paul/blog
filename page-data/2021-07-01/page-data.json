{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021-07-01/","result":{"data":{"site":{"siteMetadata":{"title":"RPF Blog"}},"markdownRemark":{"id":"99bbe821-e084-5343-9bd9-80c21cd5683b","excerpt":"This tutorial assumes you already have a working Ubuntu VPS with the repositories downloaded to it, specifically in the var/www folder. Also that you have your…","html":"<p><em>This tutorial assumes you already have a working Ubuntu VPS with the repositories downloaded to it, specifically in the var/www folder. Also that you have your server setup to serve your React app, have setup your mongodb. I might make another tutorial for getting your repository on your VPS with SSH and GitHub Actions.</em></p>\n<p><strong>With this tutorial you will learn how to deploy a React app which is being served by a node.js backend server connected to a mongodb database.</strong></p>\n<p>First we’re going to install node, npm, nginx and nano. The second <code class=\"language-text\">npm -v</code> command lets you check the npm version (and checking if it installed at all).</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd ~\ncurl -sL https://deb.nodesource.com/setup_15.x -o nodesource_setup.sh\nsudo bash nodesource_setup.sh\nsudo apt install nodejs\nnodejs -v</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo apt install npm\nnpm -v\nsudo apt-get install nginx\nsudo apt install nano</code></pre></div>\n<p>After installing these programs you can now install PM2, a process manager that will keep our server running 24/7.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g pm2</code></pre></div>\n<p>Now we setup nginx, which will point your server to the server PM2 runs. Replace domain(.com) with your domain and pay attention to the port that you host your server on. We then simply do a validation check on the file and restart nginx to let the changes take effect.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd /etc/nginx/sites-available\nnano default\n\n# copy paste this into default\nmap $http_upgrade $connection_upgrade {\n    default         upgrade;\n    &#39;&#39;              close;\n}\nserver {\n\n       server_name domain.com www.domain.com;\n\n       location / {\n        # Backend nodejs server\n        proxy_pass         http://127.0.0.1:3000;\n        proxy_http_version  1.1;\n        proxy_set_header    Upgrade     $http_upgrade;\n        proxy_set_header    Connection  $connection_upgrade;\n    }\n}\n\n# test if the configuration is correct\nnginx -t\n\n# restart nginx\nsystemctl restart nginx</code></pre></div>\n<p>Then we can install the HTTPS certificates so that your site gets that (green) lock icon (you should do this even if you don’t have any user input).</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo apt install snapd\nsudo snap install --classic certbot\ncd /\ncertbot --nginx -d domain.com -d www.domain.com\nsystemctl restart nginx</code></pre></div>\n<p>Finally, you can start the PM2 by navigating to your server folder and starting the server which has a app.js file.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd var/www/backend\npm2 start app.js</code></pre></div>","frontmatter":{"title":"How to setup nginx and pm2 for React & node","date":"July 01, 2021","description":"Using PM2 & nginx to get your website out in the world."}}},"pageContext":{"slug":"/2021-07-01/","previous":{"fields":{"slug":"/2021-05-01-oneplus-bullets-z/"},"frontmatter":{"title":"Oneplus Bullets Wireless Z Review"}},"next":null}},"staticQueryHashes":["1995925640","2841359383"]}